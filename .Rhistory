setwd(
file.path(
"/media"
, "latex"
, "Profiles"
, "MYaseen208"
, "Muhammad_Yaseen"
, "Consultancy_at_UAF"
, "Mr._M._Yaseen"
, "R_Packages"
, "PakPC2017"
, "PakPC2017"
)
)
setwd(
file.path(
"/media"
, "latex"
, "Profiles"
, "MYaseen208"
, "Muhammad_Yaseen"
, "Consultancy_at_UAF"
, "Mr._M._Yaseen"
, "R_Packages"
, "PakPC2017"
, "PakPC2017"
)
)
getwd()
setwd(
file.path(
"/media"
, "latex"
, "Profiles"
, "MYaseen208"
, "Muhammad_Yaseen"
, "Consultancy_at_UAF"
, "Mr._M._Yaseen"
, "R_Packages"
, "PakPC2017"
, "PakPC2017"
)
)
getwd()
install.packages("devtools")
library(devtools)
devtools::load_all()
library(PakPC2017GUI)
?PakPC2017GUI
PakPC2017GUI()
load("/home/yaseen/Desktop/QCSimBoot/RepCpAvgWidthCovProb.RData")
View(RepCpAvgWidthCovProb)
library(stability)
?add_anova
data(ge_data)
Yield.Effects <- ge_effects(
.data = ge_data
, y    = Yield
, geno = Gen
, env  = Env
)
names(Yield.Effects)
ge_effects.default <-
function(.data, y, geno, env){
Y   <- deparse(substitute(y))
G   <- deparse(substitute(geno))
E   <- deparse(substitute(env))
ge_means <- tapply(.data$Y, list(.data$G, .data$E), mean)
gge_effects <-
sweep(
x      = ge_means
, MARGIN = 2
, STATS  = colMeans(ge_means)
)
ge_effects <-
sweep(
x      = gge_effects
, MARGIN = 1
, STATS  = rowMeans(gge_effects)
)
return(list(
"ge_means"    = ge_means
, "ge_effects"  = ge_effects
, "gge_effects" = gge_effects
))
}
data(ge_data)
Yield.Effects <- ge_effects(
.data = ge_data
, y    = Yield
, geno = Gen
, env  = Env
)
names(Yield.Effects)
Yield.Effects$ge_means
?spread
ge_effects.default <-
function(.data, y, geno, env){
y    <- enquo(y)
geno <- enquo(geno)
env  <- enquo(env)
ge_means <- .data %>%
dplyr::group_by(!!geno, !!env) %>%
dplyr::summarize(Mean  = mean(!!y)) %>%
tidyr::spread(key = env, value = Mean)
# Y   <- deparse(substitute(y))
# G   <- deparse(substitute(geno))
# E   <- deparse(substitute(env))
#
# ge_means <- tapply(.data$Y, list(.data$G, .data$E), mean)
gge_effects <-
sweep(
x      = ge_means
, MARGIN = 2
, STATS  = colMeans(ge_means)
)
ge_effects <-
sweep(
x      = gge_effects
, MARGIN = 1
, STATS  = rowMeans(gge_effects)
)
return(list(
"ge_means"    = ge_means
, "ge_effects"  = ge_effects
, "gge_effects" = gge_effects
))
}
data(ge_data)
Yield.Effects <- ge_effects(
.data = ge_data
, y    = Yield
, geno = Gen
, env  = Env
)
names(Yield.Effects)
Yield.Effects
devtools::load_all()
rm(list = ls())
setwd("/media/yaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/baystability/baystability")
getwd()
library(devtools)
devtools::load_all()
rm(list = ls())
setwd("/media/yaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/baystability/baystability")
getwd()
library(devtools)
devtools::load_all()
library(baystability)
example("ge_ammi")
?bayes_ammi
names(fm3)
data(cultivo2008)
fm1 <-
ge_ammi(
.data  = cultivo2008
, .y    = y
, .gen  = entry
, .env  = site
, .rep  = rep
)
r0 <- fm1$g
c0 <- fm1$e
n0 <- fm1$Rep
k0 <- fm1$k
mu0      <- fm1$mu
sigma20  <- fm1$sigma2
tau0     <- fm1$tau
tao0     <- fm1$tao
delta0   <- fm1$delta
lambdas0 <- fm1$lambdas
alphas0  <- fm1$alphas
gammas0  <- fm1$gammas
matriz_de_medias0 <- fm1$ge_means$ge_means
data(cultivo2008)
fm2 <-
ge_ammi(
.data = cultivo2009
, .y    = y
, .gen  = entry
, .env  = site
, .rep  = rep
)
alphasa  <- tibble::as_tibble(fm2$alphas)
gammasa  <- tibble::as_tibble(fm2$gammas)
# Biplots OLS
library(ggplot2)
BiplotOLS1 <-
ggplot(data = alphasa, mapping = aes(x = V1, y = V2)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_text(aes(label = 1:nrow(alphasa)), vjust = "inward", hjust = "inward") +
scale_x_continuous(limits = c(-max(abs(c(range(alphasa[, 1:2])))), max(abs(c(range(alphasa[, 1:2])))))) +
scale_y_continuous(limits = c(-max(abs(c(range(alphasa[, 1:2])))), max(abs(c(range(alphasa[, 1:2])))))) +
labs(title = "OLS", x = expression(u[1]), y = expression(u[2])) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
print(BiplotOLS1)
BiplotOLS2 <-
ggplot(data = gammasa, mapping = aes(x = V1, y = V2)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_text(aes(label = 1:nrow(gammasa)), vjust = "inward", hjust = "inward") +
scale_x_continuous(limits = c(-max(abs(c(range(gammasa[, 1:2])))), max(abs(c(range(gammasa[, 1:2])))))) +
scale_y_continuous(limits = c(-max(abs(c(range(gammasa[, 1:2])))), max(abs(c(range(gammasa[, 1:2])))))) +
labs(title = "OLS", x = expression(v[1]), y = expression(v[2])) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
print(BiplotOLS2)
BiplotOLS3 <-
ggplot(data = alphasa, mapping = aes(x = V1, y = V2)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_text(aes(label = 1:nrow(alphasa)), vjust = "inward", hjust = "inward") +
geom_point(data = gammasa, mapping = aes(x = V1, y = V2)) +
geom_segment(data = gammasa, aes(x = 0, y = 0, xend = V1, yend = V2),
environment = environment(), arrow = arrow(length = unit(0.2, "cm")), alpha = 0.75, color = "red") +
geom_text(data = gammasa,  aes(x = V1, y = V2, label = paste0("E", 1:nrow(gammasa))), vjust = "inward", hjust = "inward") +
scale_x_continuous(limits = c(-max(abs(c(range(alphasa[, 1:2], gammasa[, 1:2])))), max(abs(c(range(alphasa[, 1:2], gammasa[, 1:2])))))) +
scale_y_continuous(limits = c(-max(abs(c(range(alphasa[, 1:2], gammasa[, 1:2])))), max(abs(c(range(alphasa[, 1:2], gammasa[, 1:2])))))) +
labs(title = "OLS", x = expression(PC[1]), y = expression(PC[2])) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
print(BiplotOLS3)
ggplot(data = alphasa, mapping = aes(x = V1, y = V2)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_text(aes(label = 1:nrow(alphasa)), vjust = "inward", hjust = "inward") +
geom_point(data = gammasa, mapping = aes(x = V1, y = V2)) +
geom_segment(data = gammasa, aes(x = 0, y = 0, xend = V1, yend = V2),
arrow = arrow(length = unit(0.2, "cm")), alpha = 0.75, color = "red") +
geom_text(data = gammasa,  aes(x = V1, y = V2, label = paste0("E", 1:nrow(gammasa))), vjust = "inward", hjust = "inward") +
scale_x_continuous(limits = c(-max(abs(c(range(alphasa[, 1:2], gammasa[, 1:2])))), max(abs(c(range(alphasa[, 1:2], gammasa[, 1:2])))))) +
scale_y_continuous(limits = c(-max(abs(c(range(alphasa[, 1:2], gammasa[, 1:2])))), max(abs(c(range(alphasa[, 1:2], gammasa[, 1:2])))))) +
labs(title = "OLS", x = expression(PC[1]), y = expression(PC[2])) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = gammasa, mapping = aes(x = V1, y = V2)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
geom_text(aes(label = 1:nrow(gammasa)), vjust = "inward", hjust = "inward") +
scale_x_continuous(limits = c(-max(abs(c(range(gammasa[, 1:2])))), max(abs(c(range(gammasa[, 1:2])))))) +
scale_y_continuous(limits = c(-max(abs(c(range(gammasa[, 1:2])))), max(abs(c(range(gammasa[, 1:2])))))) +
labs(title = "OLS", x = expression(v[1]), y = expression(v[2])) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
fm3 <-
bayes_ammi(
.data = cultivo2009
, .y     = y
, .gen   = entry
, .env   = site
, .rep   = rep
, .nIter = 200
)
cultivo2009
fm3 <-
bayes_ammi(
.data = cultivo2009
, .y     = y
, .gen   = entry
, .env   = site
, .rep   = rep
, .nIter = 200
)
alphasa  <- fm2$alphas
gammasa  <- fm2$gammas
fm3 <-
bayes_ammi(
.data = cultivo2009
, .y     = y
, .gen   = entry
, .env   = site
, .rep   = rep
, .nIter = 200
)
library(baystability)
example("bayes_ammi")
example("bayes_ammi")
library(bayesammi)
data(Maiz)
fm1 <-
bayes_ammi(
.data  = Maiz
, .y     = y
, .gen   = entry
, .env   = site
, .rep   = rep
, .nIter = 20
)
rm(list = ls())
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/bayesammi/bayesammi")
getwd()
library(devtools)
devtools::load_all()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::install(quick = TRUE, build_vignettes = TRUE, upgrade_dependencies = FALSE)
devtools::build(vignettes = TRUE, manual = TRUE)
devtools::build(binary = TRUE,  vignettes = TRUE,
manual = TRUE, args = c('--preclean'))
devtools::load_all()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::install(quick = TRUE, build_vignettes = TRUE, upgrade_dependencies = FALSE)
devtools::build(vignettes = TRUE, manual = TRUE)
devtools::build(binary = TRUE,  vignettes = TRUE,
manual = TRUE, args = c('--preclean'))
devtools::check()
devtools::release(pkg = ".", check = FALSE, args = NULL)
devtools::load_all()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::install(quick = TRUE, build_vignettes = TRUE, upgrade_dependencies = FALSE)
library(bayesammi)
devtools::release(pkg = ".", check = FALSE, args = NULL)
